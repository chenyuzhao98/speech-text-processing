
###############################################################################
# Task c: FPc_WhiteNoise.py (Section 4.3) (10%)
################
#
# Implement the body of this script:
#
#	Create a class "WhiteNoise", whose initialiser takes one optional argument for amplitude with a default value of 0.9
#
#	Implement a method genWhiteNoise() for this class. genWhiteNoise() takes no additional argument
#
#	genWhiteNoise() returns a single float as a sample of white noise. As all samples in the desired white noise are required to have a uniform distribution, it can be generated by a random process using numpy.random.uniform(). The lowest and highest values in the signal should not go over the amplitude provided when the instance of the class is created. 
#
#	You must NOT use/import	any other modules, apart from "numpy"
#
#	Refer to Section 4.3 in "../LING402_FP.pdf" for other requirements
#
###############################################################################

import numpy as np
import math


### IMPORT MODULE(S) ABOVE THIS LINE ###



class WhiteNoise:



### INSERT YOUR CODE BELOW THIS LINE ###
    def __init__(self, amp=0.9):
        self.amp = amp


    def genWhiteNoise(self):
        return np.random.uniform(high = self.amp)
